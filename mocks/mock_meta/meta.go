// Code generated by MockGen. DO NOT EDIT.
// Source: meta/meta.go

// Package mock_meta is a generated GoMock package.
package mock_meta

import (
	gomock "github.com/golang/mock/gomock"
	meta "github.com/nori-io/nori-common/meta"
	reflect "reflect"
)

// MockMeta is a mock of Meta interface
type MockMeta struct {
	ctrl     *gomock.Controller
	recorder *MockMetaMockRecorder
}

// MockMetaMockRecorder is the mock recorder for MockMeta
type MockMetaMockRecorder struct {
	mock *MockMeta
}

// NewMockMeta creates a new mock instance
func NewMockMeta(ctrl *gomock.Controller) *MockMeta {
	mock := &MockMeta{ctrl: ctrl}
	mock.recorder = &MockMetaMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMeta) EXPECT() *MockMetaMockRecorder {
	return m.recorder
}

// Id mocks base method
func (m *MockMeta) Id() meta.ID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Id")
	ret0, _ := ret[0].(meta.ID)
	return ret0
}

// Id indicates an expected call of Id
func (mr *MockMetaMockRecorder) Id() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Id", reflect.TypeOf((*MockMeta)(nil).Id))
}

// GetAuthor mocks base method
func (m *MockMeta) GetAuthor() meta.Author {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAuthor")
	ret0, _ := ret[0].(meta.Author)
	return ret0
}

// GetAuthor indicates an expected call of GetAuthor
func (mr *MockMetaMockRecorder) GetAuthor() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAuthor", reflect.TypeOf((*MockMeta)(nil).GetAuthor))
}

// GetDependencies mocks base method
func (m *MockMeta) GetDependencies() []meta.Dependency {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDependencies")
	ret0, _ := ret[0].([]meta.Dependency)
	return ret0
}

// GetDependencies indicates an expected call of GetDependencies
func (mr *MockMetaMockRecorder) GetDependencies() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDependencies", reflect.TypeOf((*MockMeta)(nil).GetDependencies))
}

// GetDescription mocks base method
func (m *MockMeta) GetDescription() meta.Description {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDescription")
	ret0, _ := ret[0].(meta.Description)
	return ret0
}

// GetDescription indicates an expected call of GetDescription
func (mr *MockMetaMockRecorder) GetDescription() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDescription", reflect.TypeOf((*MockMeta)(nil).GetDescription))
}

// GetCore mocks base method
func (m *MockMeta) GetCore() meta.Core {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCore")
	ret0, _ := ret[0].(meta.Core)
	return ret0
}

// GetCore indicates an expected call of GetCore
func (mr *MockMetaMockRecorder) GetCore() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCore", reflect.TypeOf((*MockMeta)(nil).GetCore))
}

// GetInterface mocks base method
func (m *MockMeta) GetInterface() meta.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInterface")
	ret0, _ := ret[0].(meta.Interface)
	return ret0
}

// GetInterface indicates an expected call of GetInterface
func (mr *MockMetaMockRecorder) GetInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInterface", reflect.TypeOf((*MockMeta)(nil).GetInterface))
}

// GetLicense mocks base method
func (m *MockMeta) GetLicense() []meta.License {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLicense")
	ret0, _ := ret[0].([]meta.License)
	return ret0
}

// GetLicense indicates an expected call of GetLicense
func (mr *MockMetaMockRecorder) GetLicense() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLicense", reflect.TypeOf((*MockMeta)(nil).GetLicense))
}

// GetLinks mocks base method
func (m *MockMeta) GetLinks() []meta.Link {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLinks")
	ret0, _ := ret[0].([]meta.Link)
	return ret0
}

// GetLinks indicates an expected call of GetLinks
func (mr *MockMetaMockRecorder) GetLinks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLinks", reflect.TypeOf((*MockMeta)(nil).GetLinks))
}

// GetRepository mocks base method
func (m *MockMeta) GetRepository() meta.Repository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRepository")
	ret0, _ := ret[0].(meta.Repository)
	return ret0
}

// GetRepository indicates an expected call of GetRepository
func (mr *MockMetaMockRecorder) GetRepository() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRepository", reflect.TypeOf((*MockMeta)(nil).GetRepository))
}

// GetTags mocks base method
func (m *MockMeta) GetTags() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTags")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetTags indicates an expected call of GetTags
func (mr *MockMetaMockRecorder) GetTags() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTags", reflect.TypeOf((*MockMeta)(nil).GetTags))
}
