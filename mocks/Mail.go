// Code generated by mockery v1.0.0. DO NOT EDIT.

//
/*
Copyright 2019 The Nori Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package mocks

import mock "github.com/stretchr/testify/mock"

// Mail is an autogenerated mock type for the Mail type
type Mail struct {
	mock.Mock
}

// RegisterAfterDelivery provides a mock function with given fields: _a0
func (_m *Mail) RegisterAfterDelivery(_a0 func(interface{})) {
	_m.Called(_a0)
}

// RegisterAfterSend provides a mock function with given fields: _a0
func (_m *Mail) RegisterAfterSend(_a0 func(interface{})) {
	_m.Called(_a0)
}

// RegisterBeforeDelivery provides a mock function with given fields: _a0
func (_m *Mail) RegisterBeforeDelivery(_a0 func(interface{})) {
	_m.Called(_a0)
}

// RegisterBeforeSend provides a mock function with given fields: _a0
func (_m *Mail) RegisterBeforeSend(_a0 func(interface{})) {
	_m.Called(_a0)
}

// Send provides a mock function with given fields: msg
func (_m *Mail) Send(msg interface{}) error {
	ret := _m.Called(msg)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
