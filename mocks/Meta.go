// Code generated by mockery v1.0.0. DO NOT EDIT.

//
/*
Copyright 2019 The Nori Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package mocks

import meta "github.com/nori-io/nori-common/meta"
import mock "github.com/stretchr/testify/mock"

// Meta is an autogenerated mock type for the Meta type
type Meta struct {
	mock.Mock
}

// GetAuthor provides a mock function with given fields:
func (_m *Meta) GetAuthor() meta.Author {
	ret := _m.Called()

	var r0 meta.Author
	if rf, ok := ret.Get(0).(func() meta.Author); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(meta.Author)
	}

	return r0
}

// GetCore provides a mock function with given fields:
func (_m *Meta) GetCore() meta.Core {
	ret := _m.Called()

	var r0 meta.Core
	if rf, ok := ret.Get(0).(func() meta.Core); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(meta.Core)
	}

	return r0
}

// GetDependencies provides a mock function with given fields:
func (_m *Meta) GetDependencies() []meta.Dependency {
	ret := _m.Called()

	var r0 []meta.Dependency
	if rf, ok := ret.Get(0).(func() []meta.Dependency); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]meta.Dependency)
		}
	}

	return r0
}

// GetDescription provides a mock function with given fields:
func (_m *Meta) GetDescription() meta.Description {
	ret := _m.Called()

	var r0 meta.Description
	if rf, ok := ret.Get(0).(func() meta.Description); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(meta.Description)
	}

	return r0
}

// GetInterface provides a mock function with given fields:
func (_m *Meta) GetInterface() meta.Interface {
	ret := _m.Called()

	var r0 meta.Interface
	if rf, ok := ret.Get(0).(func() meta.Interface); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(meta.Interface)
	}

	return r0
}

// GetLicense provides a mock function with given fields:
func (_m *Meta) GetLicense() meta.License {
	ret := _m.Called()

	var r0 meta.License
	if rf, ok := ret.Get(0).(func() meta.License); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(meta.License)
	}

	return r0
}

// GetLinks provides a mock function with given fields:
func (_m *Meta) GetLinks() []meta.Link {
	ret := _m.Called()

	var r0 []meta.Link
	if rf, ok := ret.Get(0).(func() []meta.Link); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]meta.Link)
		}
	}

	return r0
}

// GetRepository provides a mock function with given fields:
func (_m *Meta) GetRepository() meta.Repository {
	ret := _m.Called()

	var r0 meta.Repository
	if rf, ok := ret.Get(0).(func() meta.Repository); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(meta.Repository)
	}

	return r0
}

// GetTags provides a mock function with given fields:
func (_m *Meta) GetTags() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// Id provides a mock function with given fields:
func (_m *Meta) Id() meta.ID {
	ret := _m.Called()

	var r0 meta.ID
	if rf, ok := ret.Get(0).(func() meta.ID); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(meta.ID)
	}

	return r0
}
