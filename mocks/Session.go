// Code generated by mockery v1.0.0. DO NOT EDIT.

//
/*
Copyright 2019 The Nori Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package mocks

import context "context"
import endpoint "github.com/nori-io/nori-common/endpoint"

import mock "github.com/stretchr/testify/mock"
import time "time"

// Session is an autogenerated mock type for the Session type
type Session struct {
	mock.Mock
}

// Delete provides a mock function with given fields: key
func (_m *Session) Delete(key []byte) error {
	ret := _m.Called(key)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte) error); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: key, data
func (_m *Session) Get(key []byte, data interface{}) error {
	ret := _m.Called(key, data)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, interface{}) error); ok {
		r0 = rf(key, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Save provides a mock function with given fields: key, data, exp
func (_m *Session) Save(key []byte, data interface{}, exp time.Duration) error {
	ret := _m.Called(key, data, exp)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, interface{}, time.Duration) error); ok {
		r0 = rf(key, data, exp)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SessionId provides a mock function with given fields: ctx
func (_m *Session) SessionId(ctx context.Context) []byte {
	ret := _m.Called(ctx)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(context.Context) []byte); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}

// Verify provides a mock function with given fields:
func (_m *Session) Verify() endpoint.Middleware {
	ret := _m.Called()

	var r0 endpoint.Middleware
	if rf, ok := ret.Get(0).(func() endpoint.Middleware); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(endpoint.Middleware)
		}
	}

	return r0
}
