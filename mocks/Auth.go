// Code generated by mockery v1.0.0. DO NOT EDIT.

//
/*
Copyright 2019 The Nori Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package mocks

import context "context"
import endpoint "github.com/nori-io/nori-common/endpoint"
import interfaces "github.com/nori-io/nori-common/interfaces"
import mock "github.com/stretchr/testify/mock"

// Auth is an autogenerated mock type for the Auth type
type Auth struct {
	mock.Mock
}

// AccessToken provides a mock function with given fields: ops
func (_m *Auth) AccessToken(ops interfaces.AccessTokenOption) (string, error) {
	ret := _m.Called(ops)

	var r0 string
	if rf, ok := ret.Get(0).(func(interfaces.AccessTokenOption) string); ok {
		r0 = rf(ops)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interfaces.AccessTokenOption) error); ok {
		r1 = rf(ops)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Authenticated provides a mock function with given fields:
func (_m *Auth) Authenticated() endpoint.Middleware {
	ret := _m.Called()

	var r0 endpoint.Middleware
	if rf, ok := ret.Get(0).(func() endpoint.Middleware); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(endpoint.Middleware)
		}
	}

	return r0
}

// IsAuthenticated provides a mock function with given fields: _a0
func (_m *Auth) IsAuthenticated(_a0 context.Context) bool {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
